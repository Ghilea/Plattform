@use '../variables' as var;

.project {
    background-image: linear-gradient(to left, var(--g-color) 0%, var(--g-color2) 100%);

    .container {
        margin: 5em auto;
        grid-template-columns: repeat(7, 1fr);
        grid-template-rows: auto;
        justify-content: center;
        align-content: center;
        justify-items: stretch;
    }

     img {
         padding: 0.3em;
         max-width: 100%;
     }

     .headTitle {
         width: 100%;
     }

    .skills {

        gap: var(--size-10);

        @mixin screen-min($min) {
            @media (min-width: $min) {
                @content;
            }
        }

        @include screen-min(var.$screen-xs) {
            grid-template-columns: repeat(1, 1fr);
        }

        @include screen-min(var.$screen-s) {
           grid-template-columns: repeat(2, 1fr);
        }

        @include screen-min(var.$screen-m) {
            grid-template-columns: repeat(3, 1fr);
        }

        @include screen-min(var.$screen-l) {
            grid-template-columns: repeat(4, 1fr);
        }

        figure {
            width: 7em;
          
            img {
                width: 100%;
            }
        }
    }
    

    figure {

        margin-inline: auto;

        figcaption {
            text-align: center;
            color: hsl(var(--color));
            font-weight: bolder;
            letter-spacing: 0.1em;
        }
    }

    .projectBox {
        .row {
            align-items: center;
            padding: 1em;
            text-align: center;
            color: #FFF;
            opacity: 0.95;
            border-radius: 10px;
            gap: 2em 0.5em;
            box-shadow: 0 0 5px hsl(0, 0%, 100%, 0.2);
            background-color: hsl(237, 52%, 65%);
        }

        @mixin screen-min($min) {
            @media (min-width: $min) {
                @content;
            }
        }

        @include screen-min(var.$screen-xs) {
            grid-template-columns: repeat(1, 1fr);
        }

        @include screen-min(var.$screen-l) {
            grid-template-columns: repeat(5, 1fr);
            :nth-child(1) {
                grid-column: 1 / span 5;
            }

            :nth-child(2) {
                grid-column: 1 / span 2;
            }

            :nth-child(3) {
                grid-column: 4 / span 2;
            }
        }
    }

    .leftPanel {
        width:100%;
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
        align-content: center;
        justify-content: center;
        align-items: flex-start;

        img {
            width: 100%;
            height: auto;
        }
    }

    .centerPanel {
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
        align-content: center;
        justify-content: center;

        img {
            width: 3em;
            height: auto;
        }

    }

    .rightPanel {
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
        align-content: center;
        justify-content: center;

        p {
            text-align: left;
            padding: 1em;
            display: flex;
            flex-direction: column;
            gap: 1em;

            a {
                color: var(--gray-0);
                width: fit-content;

                &:hover {
                    opacity: 0.8;
                    color: hsl(var(--orange));
                    transition: all ease-in-out 200ms;
                }
            }
        }

        .boxBtn {
            width: auto;
            margin: 1em;
        }

        .buttonLeft, .buttonRight {
            position: unset;
        }
    }

    h2 {
        padding: 3em 0 0 0;
        text-align: center;
        color: hsl(var(--color));
        font-weight: var(--font-weight-600);
        font-size: var(--font-size-5);
    }

    h3 {
        color: hsl(var(--gray-0));
        font-weight: var(--font-weight-600);
        font-size: var(--font-size-4);
        overflow-wrap: break-word;
    }

    header {
        
        p {
            text-align: center;
            color: hsl(var(--color));
            font-weight: var(--font-weight-400);
            font-size: var(--font-size-1);
            width: 100%;
            height: auto;
            margin: 1.5em auto;
            padding: 0 1em;
        }
    }

    p {
        color: hsl(var(--color));
        font-weight: var(--font-weight-400);
        font-size: var(--font-size-1);
        width: 100%;
        height: auto;
        margin: 1.5em auto;
        padding: 0 1em;
        white-space: pre-line;
    }

    nav {
        color: hsl(var(--color));
        font-weight: var(--font-weight-400);
        font-size: var(--font-size-1);
        width: 100%;
        height: auto;
        margin: 1.5em auto;
        padding: 0 1em;
    }

    .view {
        grid-template-columns: repeat(2, 1fr);
        gap:1em;
        margin-top: 10em;
        margin-bottom: 10em;

        p {
            font-size: var(--font-size-3);
        }

        .toolImg { 
            display: flex;
            flex-direction: row;
            flex-wrap: wrap;
            align-content: center;
            justify-content: space-evenly;

            img {
                width: var(--size-10);
                margin: var(--size-3);
            }

        }

        .boxBtn {
            display: inline-flex;
            justify-content: center;
        }

        h1 {
            grid-column: 1 / span 2;
            color: white;
            text-align: center;
            font-size: var(--font-size-7);
        }

        section, nav {
            grid-column: 1 / span 2;
        }

        .row {
            justify-content: left;
            gap: 1em;
        }

        h2 {
            font-size: 1.1rem;
            padding: 1em;
            text-align: left;
            font-weight: var(--font-weight-6);
            font-size: var(--font-size-4);
        }

        .box {
            background-color: hsl(var(--g-color));
            border-radius: 0.3em;
            padding: var(--size-2);
            box-shadow: var(--shadow-1);
        }

        nav {
            font-size: var(--font-size-3);

            a { 
                font-weight: var(--font-weight-6);
                color: hsl(var(--orange));           
                
                &:hover {
                    color: var(--gray-0);
                }
            }

            
        }

        .workFlow {
            grid-column: 1 / span 2;

            article {
                display: flex;
                gap: var(--size-8);
                margin-block: var(--size-12);

               figure {

                    img {
                        border-radius: var(--radius-3);
                    }

                    figcaption {
                        font-size: var(--font-size-0);
                        font-weight: var(--font-weight-4);
                    }
               }

                @mixin screen-min($min) {
                    @media (min-width: $min) {
                        @content;
                    }
                }

                @include screen-min(var.$screen-xl) {
                     &:nth-child(odd) {
                         flex-direction: row;
                     }

                    &:nth-child(even) {
                        flex-direction: row-reverse;
                    }
                }

                @include screen-min(var.$screen-xs) {
                    flex-direction: column-reverse
                }

            }
        }
    }
}